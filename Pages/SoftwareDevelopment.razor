@page "/services/e2e-development"
@inject NavigationManager Nav

<div class="max-w-4xl mx-auto mb-16 px-6 pt-32">
    <!-- Back button -->
    <button class="text-accent1 mb-6 block px-4 py-2 rounded border border-accent1
               hover:bg-accent1 hover:text-white transition"
            @onclick="GoBack">
        ← Back
    </button>

    <!-- Page title -->
    <h1 class="text-3xl font-bold mb-8">E2E Solution Development</h1>

    <!-- Cards grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
        @foreach (var item in Items)
        {
            <div class="bg-white rounded-2xl shadow-sm hover:shadow-lg transition p-6 flex flex-col items-start">
                <div class="text-accent1 mb-4 text-4xl self-center">
                    <i class="bi @item.Icon"></i>
                </div>

                <h3 class="text-xl font-semibold mb-2">@item.Title</h3>

                <ul class="list-disc list-inside text-gray-700 text-sm space-y-1">
                    @foreach (var point in item.Points)
                    {
                        <li>@point</li>
                    }
                </ul>
            </div>
        }
    </div>
</div>

@code {
    void GoBack() => Nav.NavigateTo("/");

    class ServiceItem
    {
        public string Icon { get; set; }
        public string Title { get; set; }
        public List<string> Points { get; set; }
    }

    List<ServiceItem> Items = new()
    {
        new ServiceItem {
            Icon   = "bi-globe",
            Title  = "Web Development",
            Points = new()
            {
                "Responsive UI with modern CSS frameworks (Tailwind, Bootstrap)",
                "Single-Page Apps using Blazor or React for fluid UX",
                "SEO-friendly markup and performance optimization",
                "Headless CMS & e-commerce platform integrations"
            }
        },
        new ServiceItem {
            Icon   = "bi-plug",
            Title  = "Integration Development",
            Points = new()
            {
                "Design and consume RESTful and GraphQL APIs",
                "Secure OAuth2 / JWT authentication flows",
                "Middleware connectors for legacy systems",
                "Event-driven data pipelines and webhooks"
            }
        },
        new ServiceItem {
            Icon   = "bi-robot",
            Title  = "AI & Machine Learning",
            Points = new()
            {
                "Data cleaning, feature engineering and model training",
                "NLP solutions: chatbots, sentiment analysis",
                "Computer Vision: image classification and object detection",
                "Model deployment (TensorFlow, ONNX) and monitoring"
            }
        },
        new ServiceItem {
            Icon   = "bi-cloud",
            Title  = "Cloud Services",
            Points = new()
            {
                "Infrastructure as Code (Terraform, ARM templates)",
                "Container orchestration with Docker & Kubernetes",
                "Auto-scaling, high-availability architecture",
                "CI/CD pipelines (GitHub Actions, Azure DevOps)"
            }
        },
        new ServiceItem {
            Icon   = "bi-server",
            Title  = "Backend Services",
            Points = new()
            {
                "Microservices using .NET/C# with DDD patterns",
                "Scalable REST & gRPC APIs",
                "Relational & NoSQL database design",
                "Logging, health checks and observability"
            }
        },
        new ServiceItem {
            Icon   = "bi-phone",
            Title  = "Mobile Development",
            Points = new()
            {
                "Cross-platform apps with .NET MAUI or React Native",
                "Native feature integration: GPS, Camera, Push",
                "Offline data sync and local storage strategies",
                "App Store and Play Store packaging & deployment"
            }
        },
        new ServiceItem {
            Icon   = "bi-laptop",
            Title  = "Desktop App Development",
            Points = new()
            {
                "Electron, .NET MAUI, WPF or WinForms solutions",
                "Cross-platform installers and auto-updaters",
                "Modern UI/UX with adaptive layouts",
                "Integration with local hardware & services"
            }
        }
    };
}

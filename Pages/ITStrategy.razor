@page "/services/it-strategy"
@inject NavigationManager Nav

<div class="max-w-4xl mx-auto mt-20 mb-16 px-6">
    <button class="text-accent1 mb-6 block px-4 py-2 rounded border border-accent1
               hover:bg-accent1 hover:text-white transition"
            @onclick="GoBack">
        ← Back
    </button>

    <h1 class="text-3xl font-bold mb-4">IT Strategy</h1>

    <!-- New Intro Description -->
    <div class="mb-8">
        <h2 class="text-xl font-semibold mb-2">When do you need this service?</h2>
        <ul class="list-disc list-inside text-gray-700 space-y-1 text-lg">
            <li>You would like to create software, but you don't know how much it might cost.</li>
            <li>You have a business idea, but need help to transform it into technical requirements.</li>
            <li>You need to find the best technical tools for your business idea.</li>
        </ul>
    </div>

    <div class="space-y-4">
        @foreach (var (step, idx) in Steps.Select((s, i) => (s, i)))
        {
            var num = idx + 1;
            <div class="border border-gray-200 rounded-lg overflow-hidden">
                <button class="w-full flex items-center justify-between px-4 py-3 bg-gray-100 hover:bg-gray-200 transition"
                        @onclick="() => Toggle(step)">
                    <div class="flex items-center space-x-3">
                        <div class="flex items-center justify-center w-8 h-8 rounded-full bg-accent1 text-white font-bold">
                            @num
                        </div>
                        <span class="font-medium">@step.Title</span>
                    </div>
                    <svg class="w-5 h-5 transform @(step.IsExpanded ? "rotate-180" : "") transition-transform"
                         fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round"
                              d="M19 9l-7 7-7-7" />
                    </svg>
                </button>

                @if (step.IsExpanded)
                {
                    <div class="px-4 py-3 bg-white">
                        @step.Description
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    void GoBack() => Nav.NavigateTo("/");

    class Step
    {
        public string Title { get; set; }
        public string Description { get; set; }
        public bool IsExpanded { get; set; }
    }

    List<Step> Steps = new()
    {
        new Step {
            Title = "Listening in detail to understand your business need.",
            Description = "We ask the right questions and dig into your processes so we can tailor our recommendations perfectly to your goals."
        },
        new Step {
            Title = "Identifying your budgeting options.",
            Description = "We review your financial parameters and explore different funding or cost‑allocation strategies to fit your budget."
        },
        new Step {
            Title = "Creating multiple IT strategic solutions for your needs.",
            Description = "Leveraging our expertise, we craft several strategic roadmaps—each with its pros, cons, and cost estimates—so you have real choices."
        },
        new Step {
            Title = "Going through each option with you and identifying the best fit for you.",
            Description = "We walk you through the trade‑offs, answer all your questions, and help you pick the strategy that delivers the most value."
        },
    };

    void Toggle(Step step) => step.IsExpanded = !step.IsExpanded;
}

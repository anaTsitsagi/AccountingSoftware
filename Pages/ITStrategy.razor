@page "/services/it-strategy"
@inject NavigationManager Nav

<div class="max-w-4xl mx-auto mb-16 px-6 pt-32">
    <!-- Back button -->
    <button class="text-accent1 mb-6 block px-4 py-2 rounded border border-accent1
               hover:bg-accent1 hover:text-white transition"
            @onclick="GoBack">
        ← Back
    </button>

    <!-- Page title -->
    <h1 class="text-3xl font-bold mb-4">IT Strategy</h1>

    <!-- New Intro Description -->
    <div class="mb-8">
        <h2 class="text-xl font-semibold mb-2">When do you need this service?</h2>
        <ul class="list-disc list-inside text-gray-700 space-y-1 text-lg">
            <li>You're planning custom software but need accurate cost estimates before committing.</li>
            <li>You have a business idea and need to translate it into precise technical requirements.</li>
            <li>You want expert guidance on choosing the optimal tech stack and toolset.</li>
        </ul>
    </div>

    <!-- Accordion of steps -->
    <div class="space-y-4">
        @foreach (var (step, idx) in Steps.Select((s, i) => (s, i)))
        {
            var num = idx + 1;
            <div class="border border-gray-200 rounded-lg overflow-hidden">
                <button class="w-full flex items-center justify-between px-4 py-3 bg-gray-100 hover:bg-gray-200 transition"
                        @onclick="() => Toggle(step)">
                    <div class="flex items-center space-x-3">
                        <!-- Step number badge -->
                        <div class="flex items-center justify-center w-8 h-8 rounded-full bg-accent1 text-white font-bold">
                            @num
                        </div>
                        <span class="font-medium">@step.Title</span>
                    </div>
                    <svg class="w-5 h-5 transform @(step.IsExpanded ? "rotate-180" : "") transition-transform"
                         fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round"
                              d="M19 9l-7 7-7-7" />
                    </svg>
                </button>

                @if (step.IsExpanded)
                {
                    <div class="px-6 py-4 bg-white">
                        <ul class="list-disc list-inside text-gray-700 space-y-2 text-base">
                            @foreach (var detail in step.Details)
                            {
                                <li>@detail</li>
                            }
                        </ul>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    void GoBack() => Nav.NavigateTo("/");

    class Step
    {
        public string Title { get; set; }
        public List<string> Details { get; set; }
        public bool IsExpanded { get; set; }
    }

    List<Step> Steps = new()
    {
        new Step {
            Title = "Listening in detail to understand your business need",
            Details = new()
            {
                "Conduct stakeholder interviews to uncover key pain-points and objectives",
                "Map out existing workflows and data-flows to identify gaps",
                "Clarify success metrics and technical constraints upfront",
                "Align on project scope, timeline, and regulatory requirements"
            }
        },
        new Step {
            Title = "Identifying your budgeting options",
            Details = new()
            {
                "Break down costs by development phases, licensing, and maintenance",
                "Explore various delivery models: fixed-price, time-and-materials, hybrid",
                "Compare on-premise vs. cloud hosting expense profiles",
                "Perform ROI analysis and total cost of ownership (TCO) projections"
            }
        },
        new Step {
            Title = "Creating multiple IT strategic solutions for your needs",
            Details = new()
            {
                "Draft alternative architectures: microservices vs. monolith, SaaS vs. custom",
                "Specify recommended tech stacks (frontend, backend, data storage)",
                "Assess scalability, security, and compliance implications of each option",
                "Provide high-level timelines and resource plans per scenario"
            }
        },
        new Step {
            Title = "Reviewing each option together and selecting the best fit",
            Details = new()
            {
                "Walk through pros, cons, and risk factors for every strategy",
                "Answer questions and refine assumptions in real time",
                "Prioritize features against budget and timeline constraints",
                "Finalize a clear, actionable roadmap with defined milestones"
            }
        },
    };

    void Toggle(Step step) => step.IsExpanded = !step.IsExpanded;
}

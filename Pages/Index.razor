@page "/"
@using AccountingSoftware.Shared
@using System.ComponentModel.DataAnnotations
@using Microsoft.Extensions.Localization
@using System.Globalization;
@inject IStringLocalizer<Index> L
@inject IJSRuntime JS
@inject NavigationManager Nav

<div class="flex flex-col min-h-screen bg-background text-text font-sans antialiased">
    <header class="relative flex items-center justify-center h-screen pt-20 overflow-hidden">
        <!-- Vertical gradient with curved bottom -->
        <div class="absolute inset-0"
             style="background: linear-gradient(to bottom, #F0EEFF, #DAD4F8);
           border-radius: 0 0 50% 50% / 0 0 25% 25%;">
        </div>

        <div class="relative z-10 text-center px-4">
            <h1 class="font-space text-5xl md:text-6xl font-extrabold text-gray-800 mb-4">
                @L["HeroTitle"]
            </h1>
            <p class="font-space text-lg md:text-xl text-gray-700 mb-8 max-w-2xl mx-auto">
                @L["HeroSubtitle"]
            </p>
            <a href="#services"
               class="inline-block bg-white text-accent1 font-semibold py-3 px-8 rounded-full hover:bg-gray-100 transition">
                @L["ExploreServicesButton"]
            </a>
        </div>
    </header>



    <!-- Services Grid -->
    <main id="services" class="py-20 px-6 bg-background">
        <h2 class="text-3xl font-semibold text-center mb-12">@L["OurServicesHeading"]</h2>
        <div class="max-w-6xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
            <ServiceCard Icon="bi-compass"
                         Title="@L["Service1_Title"]"
                         Description="@L["Service1_Description"]"
                         BackText="@L["Service1_BackText"]"
                         Link="@L["Service1_Link"]" />

            <ServiceCard Icon="bi-diagram-3"
                         Title="@L["Service2_Title"]"
                         Description="@L["Service2_Description"]"
                         BackText="@L["Service2_BackText"]"
                         Link="@L["Service2_Link"]" />

            <ServiceCard Icon="bi-cpu"
                         Title="@L["Service3_Title"]"
                         Description="@L["Service3_Description"]"
                         BackText="@L["Service3_BackText"]"
                         Link="@L["Service3_Link"]" />

            <ServiceCard Icon="bi-tools"
                         Title="@L["Service4_Title"]"
                         Description="@L["Service4_Description"]"
                         BackText="@L["Service4_BackText"]"
                         Link="@L["Service4_Link"]" />
        </div>
    </main>

    <!-- About Us -->
    <section id="about" class="py-16 px-6 bg-white">
        <div class="max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
            <img src="/images/about-us.jpg"
                 alt="@L["AboutSection_Title"] illustration"
                 class="w-full rounded-xl shadow-md" />
            <div>
                <h2 class="text-3xl font-bold mb-4">@L["AboutSection_Title"]</h2>
                <p class="mb-4 text-gray-700 leading-relaxed">@L["AboutParagraph1"]</p>
                <p class="mb-6 text-gray-700 leading-relaxed">@L["AboutParagraph2"]</p>
                <a href="#contact"
                   class="inline-block bg-accent1 text-white font-medium py-2 px-6 rounded-full hover:bg-accent2 transition">
                    @L["GetInTouchButton"]
                </a>
            </div>
        </div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="py-12 bg-background">
        <div class="max-w-6xl mx-auto px-6">
            <h2 class="text-2xl font-semibold text-center mb-8">@L["ContactSection_Title"]</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                <!-- Map -->
                <div class="h-80 w-full rounded-lg overflow-hidden shadow-md">
                    <iframe src="https://maps.google.com/maps?q=Tbilisi,Georgia&z=13&output=embed"
                            class="w-full h-full" frameborder="0" allowfullscreen loading="lazy"></iframe>
                </div>
                <!-- Form -->
                <div>
                    @if (contactSubmitted)
                    {
                        <div class="bg-green-100 border border-green-300 text-green-800 p-4 rounded mb-6">
                            @L["ThankYouMessage"]
                        </div>
                    }
                    <EditForm Model="contactModel" OnValidSubmit="HandleContactSubmit" class="space-y-4">
                        <DataAnnotationsValidator />

                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium mb-1">@L["NameLabel"]</label>
                                <InputText @bind-Value="contactModel.Name"
                                           class="w-full border rounded p-2 text-sm"
                                           placeholder="@L["NameLabel"]" />
                                <ValidationMessage For="@(() => contactModel.Name)"
                                                   class="text-red-600 text-xs mt-1" />
                            </div>
                            <div>
                                <label class="block text-sm font-medium mb-1">@L["EmailLabel"]</label>
                                <InputText @bind-Value="contactModel.Email"
                                           type="email"
                                           class="w-full border rounded p-2 text-sm"
                                           placeholder="@L["EmailLabel"]" />
                                <ValidationMessage For="@(() => contactModel.Email)"
                                                   class="text-red-600 text-xs mt-1" />
                            </div>
                        </div>

                        <div>
                            <label class="block text-sm font-medium mb-1">@L["SubjectLabel"]</label>
                            <InputText @bind-Value="contactModel.Subject"
                                       class="w-full border rounded p-2 text-sm"
                                       placeholder="@L["SubjectLabel"]" />
                        </div>

                        <div>
                            <label class="block text-sm font-medium mb-1">@L["MessageLabel"]</label>
                            <InputTextArea @bind-Value="contactModel.Message"
                                           rows="4"
                                           class="w-full border rounded p-2 text-sm"
                                           placeholder="@L["MessageLabel"]" />
                            <ValidationMessage For="@(() => contactModel.Message)"
                                               class="text-red-600 text-xs mt-1" />
                        </div>

                        <div class="text-right">
                            <button type="submit"
                                    class="bg-accent1 text-white text-sm font-medium py-2 px-6 rounded hover:bg-accent2 transition">
                                @L["SendButton"]
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </section>
</div>

@code {
    private bool isMenuOpen;
    void ToggleMenu() => isMenuOpen = !isMenuOpen;

    string currentCulture = CultureInfo.CurrentCulture.TwoLetterISOLanguageName;
    async Task ChangeCulture(ChangeEventArgs e)
    {
        var culture = e.Value.ToString();
        await JS.InvokeVoidAsync("localStorage.setItem", "blazorCulture", culture);
        Nav.NavigateTo(Nav.Uri, forceLoad: true);
    }

    bool contactSubmitted;
    ContactModel contactModel = new();

    void HandleContactSubmit()
    {
        contactSubmitted = true;
        contactModel = new();
    }

    class ContactModel
    {
        [Required(ErrorMessageResourceName = "Validation_NameRequired", ErrorMessageResourceType = typeof(Pages.Index))]
        public string Name { get; set; }

        [Required(ErrorMessageResourceName = "Validation_EmailRequired", ErrorMessageResourceType = typeof(Pages.Index))]
        [EmailAddress(ErrorMessageResourceName = "Validation_EmailInvalid", ErrorMessageResourceType = typeof(Pages.Index))]
        public string Email { get; set; }

        public string Subject { get; set; }

        [Required(ErrorMessageResourceName = "Validation_MessageRequired", ErrorMessageResourceType = typeof(Pages.Index))]
        public string Message { get; set; }
    }
}
